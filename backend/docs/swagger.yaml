definitions:
  controllers.APIResponse:
    properties:
      data: {}
      status:
        type: integer
    type: object
  controllers.DocumentCreation:
    properties:
      date:
        example: "2025-07-12T23:45:00Z"
        type: string
      doctor:
        type: string
      file_data:
        description: base64-encoded in JSON
        items:
          type: integer
        type: array
      name:
        type: string
      type:
        type: string
    type: object
  controllers.DrugCreation:
    properties:
      description:
        type: string
      expiry:
        example: "2025-07-12T23:45:00Z"
        type: string
      location:
        type: string
      name:
        type: string
      type:
        type: string
    type: object
  controllers.User:
    properties:
      email:
        example: Aspirin@asperinovish.ru
        type: string
      name:
        example: Aspirin
        type: string
      password:
        example: Aspirin
        type: string
    type: object
  models.Document:
    properties:
      date:
        type: string
      doctor:
        type: string
      fileData:
        items:
          type: integer
        type: array
      id:
        type: integer
      name:
        type: string
      type:
        type: string
      userID:
        type: integer
    type: object
  models.Drug:
    properties:
      description:
        type: string
      expiry:
        type: string
      id:
        type: integer
      location:
        type: string
      name:
        type: string
      type:
        type: string
      userId:
        type: integer
    type: object
info:
  contact: {}
paths:
  /auth/documents:
    get:
      consumes:
      - application/json
      description: Returns all user documents in json format
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Document'
            type: array
      security:
      - BearerAuth: []
      summary: Get all documents
      tags:
      - documents
  /auth/documents/add:
    post:
      consumes:
      - application/json
      parameters:
      - description: document body
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/controllers.DocumentCreation'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/controllers.APIResponse'
            type: array
      security:
      - BearerAuth: []
      summary: Add one document
      tags:
      - documents
  /auth/drugs:
    get:
      consumes:
      - application/json
      description: Returns all drugs in json format
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Drug'
            type: array
      security:
      - BearerAuth: []
      summary: Get all drugs
      tags:
      - drugs
  /auth/drugs/add:
    post:
      consumes:
      - application/json
      parameters:
      - description: login body
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/controllers.DrugCreation'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/controllers.APIResponse'
            type: array
      security:
      - BearerAuth: []
      summary: Add one drug
      tags:
      - drugs
  /login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns a JWT
      parameters:
      - description: login body
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/controllers.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: Log in a user
      tags:
      - users
  /me:
    get:
      consumes:
      - application/json
      description: Retrieves the authenticated user's details
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: Get current user
      tags:
      - users
  /signup:
    post:
      consumes:
      - application/json
      description: Creates a new user account
      parameters:
      - description: signup body
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/controllers.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: Sign up a new user
      tags:
      - users
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
